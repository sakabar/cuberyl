import chai from 'chai';
import {State333} from '../src/State333';

describe('State333.ts', () => {
    it('cp異常: 上限を超えたピースの番号がある', () => {
        const lambda = () => new State333(
            // 100番のピースがある
            [ 100, 1, 2, 3, 4, 5, 6, 7, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });

    it('cp異常: コーナーのみ2点交換', () => {
        const lambda = () => new State333(
            [ 1, 0, 2, 3, 4, 5, 6, 7, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });

    it('co異常: 完成状態から無理やりひねった状態', () => {
        const lambda = () => new State333(
            [ 0, 1, 2, 3, 4, 5, 6, 7, ],
            // 完成状態から無理やりひねった状態
            [ 1, 1, 1, 1, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });

    it('co異常: COが3以上', () => {
        const lambda = () => new State333(
            [ 0, 1, 2, 3, 4, 5, 6, 7, ],
            [ 3, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });

    it('ep異常: 番号が同じピースが2つある', () => {
        const lambda = () => new State333(
            [ 0, 1, 2, 3, 4, 5, 6, 7, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, ],
            // 10番のエッジが2つある
            [ 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });

    it('cp異常: エッジのみ2点交換', () => {
        const lambda = () => new State333(
            [ 1, 0, 2, 3, 4, 5, 6, 7, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });

    it('eo異常: ひねり量が多い', () => {
        // COと同様
        const lambda = () => new State333(
            [ 0, 1, 2, 3, 4, 5, 6, 7, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });

    it('eo異常: eoが2以上', () => {
        const lambda = () => new State333(
            [ 0, 1, 2, 3, 4, 5, 6, 7, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });

    it('center異常', () => {
        const lambda = () => new State333(
            [ 0, 1, 2, 3, 4, 5, 6, 7, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
            [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
            [ 6, 1, 2, 3, 4, 5, ]
        );

        chai.assert.throws(lambda, Error);
    });
});

